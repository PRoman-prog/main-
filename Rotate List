class ListNode:
    def init(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        if not head or not head.next or k == 0:
            return head
        
        length = 1
        curr = head
        while curr.next:
            length += 1
            curr = curr.next
        
        k %= length
        if k == 0:
            return head
        
       
        curr.next = head
        
       
        steps_to_new_head = length - k
        curr = head
        for _ in range(steps_to_new_head - 1):
            curr = curr.next
        
        
        new_head = curr.next
        curr.next = None
        
        return new_head
